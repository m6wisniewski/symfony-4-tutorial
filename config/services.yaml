# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    hello_message: 'Hello from service'
    email_from: '%env(MAILER_FROM)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        #bind associates variable with all parameters in program so watch out !                 
        bind:
            $message: '%hello_message%' 
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
        
    App\Twig\AppExtension:
        arguments:
            $locale: '%locale%'
            
    App\Mailer\Mailer:
        arguments:
            $mailFrom: '%email_from%'
            
    App\EventListener\LikeNotificationSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
    
    #storing session in db using doctrine
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - !service { class: PDO, factory: 'database_connection:getWrappedConnection' }
            - { lock_mode: 1 }
            #without doctrine
            #- 'mysql:dbname=session_db'
            #- { db_username: user, db_password: my_password }
     
    App\Event\UserSubscriber:
        arguments:
            $defaultLocale: '%kernel.default_locale%'
     
     
     
    App\Event\LocaleSubscriber:
        arguments:
            - ['%kernel.default_locale%']
    #manually adding parameter to a service
    #App\Service\Greeting:
    #    arguments:
    #        $message: '%hello_message%'
        
    # manual wiring of 'Greeting' service to a 'BlogController' controller && LoggerInterface to 'Greeting' service when autowiring is set to 'false'
    #App\Controller\BlogController: ['@App\Service\Greeting']
    #App\Service\Greeting: ['@monolog.logger']
    
    # manual adding service to a service container
    #app.greeting:
    #    public: true
    #    alias: App\Service\Greeting
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
